$value = $node->get('field_assignee_uid')->getValue();
user_assignment_manager/src/Service/UserAssignmentHelper.php
<?php

namespace Drupal\user_assignment_manager\Service;

/**
 * Provides helper functions for user assignment.
 */
class UserAssignmentHelper {

  /**
   * Example method to greet a user.
   *
   * @param string $name
   *   The name to greet.
   *
   * @return string
   *   The greeting message.
   */
  public function greet(string $name): string {
    return 'Hello, ' . $name;
  }

  /**
   * Example method to log message.
   *
   * @param string $message
   *   Message to log.
   */
  public function log(string $message): void {
    \Drupal::logger('user_assignment_manager')->notice($message);
  }

}
user_assignment_manager/user_assignment_manager.services.yml
services:
  user_assignment_manager.helper:
    class: 'Drupal\user_assignment_manager\Service\UserAssignmentHelper'
$helper = \Drupal::service('user_assignment_manager.helper');
echo $helper->greet('Vaibhav');



use Drupal\node\Entity\Node;

/**
 * Create a node and assign user reference fields.
 */
function create_custom_node() {
  // Example values (replace with actual user IDs and content type)
  $assignee_uid = 5;
  $assigner_uid = 3;
  $beneficiary_uid = 12;

  // Create the node
  $node = Node::create([
    'type' => 'your_content_type_machine_name',
    'title' => 'Assigned Record',
    'field_assignee_uid' => ['target_id' => $assignee_uid],
    'field_assigner_uid' => ['target_id' => $assigner_uid],
    'field_beneficiary_uid' => ['target_id' => $beneficiary_uid],
    'status' => 1,
  ]);

  $node->save();

  return $node->id(); // Return the newly created node ID
}
