namespace Drupal\your_module\Form;

use Drupal\Core\Form\FormBase;
use Drupal\Core\Form\FormStateInterface;
use GuzzleHttp\Exception\RequestException;

class BankDetailsForm extends FormBase {

  public function getFormId() {
    return 'bank_details_form';
  }

  public function buildForm(array $form, FormStateInterface $form_state) {
    // IFSC input field with AJAX
    $form['field_ifsc_code'] = [
      '#type' => 'textfield',
      '#title' => $this->t('IFSC Code'),
      '#ajax' => [
        'callback' => '::validateIfscAjax',
        'event' => 'change',
        'wrapper' => 'bank-details-wrapper',
      ],
      '#maxlength' => 11,
    ];

    // Wrapper container for AJAX response
    $form['bank_details'] = [
      '#type' => 'container',
      '#attributes' => ['id' => 'bank-details-wrapper'],
    ];

    // Bank Name field
    $form['bank_details']['field_bank_name'] = [
      '#type' => 'textfield',
      '#title' => $this->t('Bank Name'),
      '#default_value' => $form_state->get('field_bank_name') ?? '',
      '#attributes' => ['readonly' => 'readonly'],
    ];

    // Branch Name field
    $form['bank_details']['field_branch_name'] = [
      '#type' => 'textfield',
      '#title' => $this->t('Branch Name'),
      '#default_value' => $form_state->get('field_branch_name') ?? '',
      '#attributes' => ['readonly' => 'readonly'],
    ];

    // Address (optional)
    $form['bank_details']['field_bank_address'] = [
      '#type' => 'textfield',
      '#title' => $this->t('Bank Address'),
      '#default_value' => $form_state->get('field_bank_address') ?? '',
      '#attributes' => ['readonly' => 'readonly'],
    ];

    // Submit button
    $form['actions'] = [
      '#type' => 'actions',
    ];
    $form['actions']['submit'] = [
      '#type' => 'submit',
      '#value' => $this->t('Submit'),
    ];

    return $form;
  }

  /**
   * AJAX callback to fetch and return bank details section.
   */
  public function validateIfscAjax(array &$form, FormStateInterface $form_state) {
    $ifsc = $form_state->getValue('field_ifsc_code') ?? '';

    // Fetch and set bank details
    $this->fetchBankDetails($form_state, $ifsc);

    // Return only the part of the form that should be updated via AJAX
    return $form['bank_details'];
  }

  /**
   * Fetches bank details from Razorpay IFSC API and sets in form_state.
   */
  public function fetchBankDetails(FormStateInterface $form_state, $ifsc) {
    if (!empty($ifsc)) {
      $client = \Drupal::httpClient();
      try {
        $response = $client->get('https://ifsc.razorpay.com/' . $ifsc);
        if ($response->getStatusCode() === 200) {
          $result = json_decode($response->getBody(), true);
          $form_state->set('field_bank_name', $result['BANK'] ?? '');
          $form_state->set('field_branch_name', $result['BRANCH'] ?? '');
          $form_state->set('field_bank_address', $result['ADDRESS'] ?? '');
        }
      } catch (RequestException $e) {
        \Drupal::messenger()->addError(t('Invalid IFSC code or API error.'));
        $form_state->set('field_bank_name', '');
        $form_state->set('field_branch_name', '');
        $form_state->set('field_bank_address', '');
      }
    }
  }

  /**
   * Submit handler.
   */
  public function submitForm(array &$form, FormStateInterface $form_state) {
    $ifsc = $form_state->getValue('field_ifsc_code');
    $bank_name = $form_state->get('field_bank_name');
    $branch = $form_state->get('field_branch_name');

    \Drupal::messenger()->addStatus("You entered IFSC: $ifsc");
    \Drupal::messenger()->addStatus("Bank: $bank_name, Branch: $branch");

    // You can now store or process this data as needed
  }
}
